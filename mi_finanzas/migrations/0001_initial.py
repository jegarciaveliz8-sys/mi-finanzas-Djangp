# Generated by Django 5.2.7 on 2025-10-17 22:49

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('tipo', models.CharField(choices=[('INGRESO', 'Ingreso'), ('EGRESO', 'Egreso')], default='EGRESO', max_length=7)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categorias', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Categorías',
                'unique_together': {('usuario', 'nombre', 'tipo')},
            },
        ),
        migrations.CreateModel(
            name='Cuenta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('tipo', models.CharField(choices=[('AHORROS', 'Ahorros'), ('CHEQUES', 'Cheques/Corriente'), ('INVERSION', 'Inversión'), ('TARJETA', 'Tarjeta de Crédito'), ('EFECTIVO', 'Efectivo'), ('PRESTAMO', 'Préstamo Personal/Deuda'), ('HIPOTECA', 'Hipoteca'), ('AUTO', 'Préstamo de Auto'), ('RETIRO', 'Cuenta de Retiro/Pensión'), ('CRYPTO', 'Criptomonedas'), ('CDT', 'Certificado de Depósito (CDT)'), ('WALLET', 'Billetera Digital/PayPal'), ('METAS', 'Ahorro para Metas Específicas'), ('ACTIVO_FIJO', 'Activo Fijo (Valor Neto)'), ('COBRO', 'Cuentas por Cobrar')], max_length=15)),
                ('saldo', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Cuentas',
                'unique_together': {('usuario', 'nombre')},
            },
        ),
        migrations.CreateModel(
            name='Transaccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto', models.DecimalField(decimal_places=2, max_digits=15)),
                ('tipo', models.CharField(choices=[('INGRESO', 'Ingreso'), ('EGRESO', 'Egreso')], max_length=7)),
                ('fecha', models.DateField()),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('es_transferencia', models.BooleanField(default=False)),
                ('categoria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mi_finanzas.categoria')),
                ('cuenta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mi_finanzas.cuenta')),
                ('transaccion_relacionada', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='par_transferencia', to='mi_finanzas.transaccion')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Transacciones',
                'ordering': ['-fecha', '-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='TransaccionRecurrente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('INGRESO', 'Ingreso'), ('EGRESO', 'Egreso')], max_length=7)),
                ('monto', models.DecimalField(decimal_places=2, max_digits=10)),
                ('descripcion', models.CharField(max_length=255)),
                ('frecuencia', models.CharField(choices=[('DIARIA', 'Diaria'), ('SEMANAL', 'Semanal'), ('MENSUAL', 'Mensual'), ('ANUAL', 'Anual')], max_length=10)),
                ('proximo_pago', models.DateField(default=django.utils.timezone.localdate)),
                ('esta_activa', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('categoria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mi_finanzas.categoria')),
                ('cuenta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mi_finanzas.cuenta')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Presupuesto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto_limite', models.DecimalField(decimal_places=2, help_text='Monto máximo que deseas gastar en esta categoría.', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('mes', models.PositiveSmallIntegerField()),
                ('anio', models.PositiveSmallIntegerField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mi_finanzas.categoria')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Presupuesto Mensual',
                'verbose_name_plural': 'Presupuestos Mensuales',
                'unique_together': {('usuario', 'categoria', 'mes', 'anio')},
            },
        ),
    ]
